<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:bs="/bootstrap5" xmlns:cov="/coverage" xmlns:c="/charts">

  <st:header name="Content-Type" value="text/html;charset=UTF-8"/>

  <bs:page it="${it}" class="fluid-container d-flex flex-column">

    <st:adjunct includes="io.jenkins.plugins.echarts"/>
    <st:adjunct includes="io.jenkins.plugins.data-tables-select"/>

    <link rel="stylesheet" href="${resURL}/plugin/font-awesome-api/css/jenkins-style.css"/>
    <link rel="stylesheet" href="${resURL}/plugin/parasoft-findings/css/view-model.css"/>

    <script type="text/javascript" src="${resURL}/plugin/parasoft-findings/js/view-model.js"/>

    <j:set var="formatter" value="${it.formatter}"/>

    <j:set var="hasModifiedLinesCoverage" value="${it.hasModifiedLinesCoverage()}"/>
    <j:set var="hasIndirectCoverageChanges" value="${it.hasIndirectCoverageChanges()}"/>

    <div class="tabBarFrame">
      <ul class="flex-wrap tabBar" role="tablist" id="tab-details">
        <li class="nav-item tab" role="presentation">
          <a class="nav-link" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab" aria-controls="overview" aria-selected="false">Overview</a>
        </li>
        <j:forEach var="metric" items="${it.treeMetrics}">
          <li class="nav-item tab" role="presentation">
            <a class="nav-link" id="${metric.toTagName()}-tab" data-bs-toggle="tab" data-bs-target="#${metric.toTagName()}" type="button" role="tab" aria-controls="${metric.toTagName()}" aria-selected="false">${formatter.getDisplayName(metric)}</a>
          </li>
        </j:forEach>
        <li class="nav-item tab" role="presentation">
          <a class="nav-link" id="fileCoverage-tab" data-bs-toggle="tab" data-bs-target="#fileCoverage" type="button" role="tab" aria-controls="fileCoverage" aria-selected="false">File Coverage</a>
        </li>
        <j:if test="${hasModifiedLinesCoverage}">
          <li class="nav-item tab" role="presentation">
            <a class="nav-link" id="changeCoverage-tab" data-bs-toggle="tab" data-bs-target="#changeCoverage" type="button" role="tab" aria-controls="changeCoverage" aria-selected="false">Modified Lines Coverage</a>
          </li>
        </j:if>
        <j:if test="${hasIndirectCoverageChanges}">
          <li class="nav-item tab" role="presentation">
            <a class="nav-link" id="indirectCoverage-tab" data-bs-toggle="tab" data-bs-target="#indirectCoverage" type="button" role="tab" aria-controls="indirectCoverage" aria-selected="false">Indirect Coverage Changes</a>
          </li>
        </j:if>
      </ul>
    </div>

    <div class="tab-content">

      <div role="tabpanel" id="overview" class="tab-pane fade" aria-labelledby="overview-tab" >
        <div class="row">
          <div class="col-5">
            <bs:card title="${%Total coverage overview}" fontAwesomeIcon="chart-bar">
              <div id="coverage-overview" class="graph-cursor-pointer overview-chart h-100"/>
            </bs:card>
          </div>
          <div class="col-7">
            <bs:card title="${%Coverage trend}" fontAwesomeIcon="chart-line">
              <div id="coverage-trend" class="graph-cursor-pointer overview-chart h-100"/>
            </bs:card>
          </div>
        </div>
      </div>

      <j:forEach var="metric" items="${it.treeMetrics}">
        <div role="tabpanel" id="${metric.toTagName()}" class="tab-pane fade" aria-labelledby="${metric.toTagName()}-tab">
          <bs:card title="${formatter.getDisplayName(metric)}" fontAwesomeIcon="folder-tree" class="flex-fill" bodyClass="d-flex flex-column">
            <div id="project-${metric.toTagName()}" class="graph-cursor-pointer tree-chart" data-item-name="${formatter.getDisplayName(metric)}"/>
          </bs:card>
        </div>
      </j:forEach>

      <div role="tabpanel" id="fileCoverage" class="tab-pane fade" aria-labelledby="fileCoverage-tab">
        <cov:coverage-table id="absolute-coverage" title="${%Coverage of all files}" symbol="symbol-regular/file-lines plugin-font-awesome-api"/>
      </div>

      <j:if test="${hasModifiedLinesCoverage}">
        <div role="tabpanel" id="changeCoverage" class="tab-pane fade" aria-labelledby="changeCoverage-tab">
          <cov:coverage-table id="modified-lines-coverage" title="${%Coverage of modified lines}" symbol="symbol-diff-stat plugin-forensics-api"/>
        </div>
      </j:if>

      <j:if test="${hasIndirectCoverageChanges}">
        <div role="tabpanel" id="indirectCoverage" class="tab-pane fade" aria-labelledby="indirectCoverage-tab">
          <cov:coverage-table id="indirect-coverage" title="${%Indirect coverage changes}" symbol="symbol-regular/face-smile plugin-font-awesome-api"/>
        </div>
      </j:if>

    </div>

  </bs:page>

  <c:chart-setup id="coverage-history"/>

  <script>
    const viewProxy =<st:bind value="${it}"/>;
    const coverageChartGenerator = new CoverageChartGenerator(jQuery3);
    viewProxy.getJenkinsColorIDs(function (colors) {
        const jenkinsColors = getJenkinsColors(colors.responseObject());
        const colorJson = JSON.stringify(Object.fromEntries(jenkinsColors));
        viewProxy.setJenkinsColors(colorJson, function(t) {});
        coverageChartGenerator.populateDetailsCharts(jenkinsColors);
    });
  </script>

</j:jelly>
